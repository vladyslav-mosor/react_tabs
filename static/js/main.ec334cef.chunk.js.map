{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","className","map","isTabSelected","classNames","href","onClick","handleClick","title","content","App","useState","setSelectedTabId","allTabs","getTitle","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAAO,SAAC,GAIP,IAHZC,EAGW,EAHXA,KACAC,EAEW,EAFXA,cACAC,EACW,EADXA,cAEMC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAQvE,OACE,qCACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GACR,IAAMI,EAAgBJ,EAAIC,KAAOH,EAAYG,GAE7C,OACE,oBACEC,UAAWG,IACT,CACE,YAAaD,IAGjB,UAAQ,MANV,SASE,mBACEE,KAAI,WAAMN,EAAIC,IACd,UAAQ,UACRM,QAAS,kBA1BL,SAACH,EAAwBJ,GACtCI,GACHP,EAAcG,GAwBaQ,CAAYJ,EAAeJ,IAH5C,SAKGA,EAAIS,SAPFT,EAAIC,WAenB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAYY,cC9CRf,EAAc,CACzB,CAAEM,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAASjB,EAAK,GAAGM,IAA3D,mBAAOL,EAAP,KAAsBiB,EAAtB,KAgBA,OACE,sBAAKX,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,4BAEG,IAlBU,SAACY,GAChB,IAAMhB,EAAcgB,EAAQf,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KAMnD,OAJqBE,EACjBA,EAAYW,MACZd,EAAK,GAAGc,MAcPM,CAASpB,MAGZ,qBAAK,UAAQ,gBAAb,SACE,cAAC,EAAD,CACEA,KAAMA,EACNC,cAAeA,EACfC,cAhBgB,SAACG,GACvBa,EAAiBb,EAAIC,aCxBzBe,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ec334cef.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport const Tabs = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}: Props) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  const handleClick = (isTabSelected: boolean, tab: Tab): void => {\n    if (!isTabSelected) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const isTabSelected = tab.id === selectedTab.id;\n\n            return (\n              <li\n                className={classNames(\n                  {\n                    'is-active': isTabSelected,\n                  },\n                )}\n                data-cy=\"Tab\"\n                key={tab.id}\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => handleClick(isTabSelected, tab)}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const getTitle = (allTabs: Tab[]): string => {\n    const selectedTab = allTabs.find(tab => tab.id === selectedTabId);\n\n    const currentTitle = selectedTab\n      ? selectedTab.title\n      : tabs[0].title;\n\n    return currentTitle;\n  };\n\n  const handleSelectTab = (tab: Tab): void => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is\n        {' '}\n        {getTitle(tabs)}\n      </h1>\n\n      <div data-cy=\"TabsComponent\">\n        <Tabs\n          tabs={tabs}\n          selectedTabId={selectedTabId}\n          onTabSelected={handleSelectTab}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}