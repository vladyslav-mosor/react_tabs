{"version":3,"sources":["helpers.ts","components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["getTabById","tabs","selectedTabId","find","tab","id","Tabs","onTabSelected","selectedTab","className","map","title","isTabSelected","classNames","href","onClick","handleClick","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"2MAEaA,EAAa,SAACC,EAAaC,GACtC,OAAOD,EAAKE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOH,MAAkBD,EAAK,I,OCO/CK,EAAO,SAAC,GAIP,IAHZL,EAGW,EAHXA,KACAC,EAEW,EAFXA,cACAK,EACW,EADXA,cAEMC,EAAcR,EAAWC,EAAMC,GAQrC,OACE,qCACE,qBAAKO,UAAU,gBAAf,SACE,6BACGR,EAAKS,KAAI,SAAAN,GACR,IAAQC,EAAcD,EAAdC,GAAIM,EAAUP,EAAVO,MACNC,EAAgBP,IAAOG,EAAYH,GAEzC,OACE,oBACEI,UAAWI,IACT,CACE,YAAaD,IAGjB,UAAQ,MANV,SASE,mBACEE,KAAI,WAAMT,GACV,UAAQ,UACRU,QAAS,kBA3BL,SAACH,EAAwBR,GACtCQ,GACHL,EAAcH,GAyBaY,CAAYJ,EAAeR,IAH5C,SAKGO,KAPEN,UAef,qBAAKI,UAAU,QAAQ,UAAQ,aAA/B,SACGD,EAAYS,cC/CRhB,EAAc,CACzB,CAAEI,GAAI,QAASM,MAAO,QAASM,QAAS,eACxC,CAAEZ,GAAI,QAASM,MAAO,QAASM,QAAS,eACxC,CAAEZ,GAAI,QAASM,MAAO,QAASM,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAASlB,EAAK,GAAGI,IAA3D,mBAAOH,EAAP,KAAsBkB,EAAtB,KAEMZ,EAAcR,EAAWC,EAAMC,GAMrC,OACE,sBAAKO,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,4BAEG,IACAD,EAAYG,SAGf,qBAAK,UAAQ,gBAAb,SACE,cAAC,EAAD,CACEV,KAAMA,EACNC,cAAeA,EACfK,cAhBgB,SAACH,GACvBgB,EAAiBhB,EAAIC,aCjBzBgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.4a7f7604.chunk.js","sourcesContent":["import { Tab } from './types/Tab';\n\nexport const getTabById = (tabs: Tab[], selectedTabId: string): Tab => {\n  return tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n};\n","import classNames from 'classnames';\nimport { getTabById } from '../../helpers';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport const Tabs = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}: Props) => {\n  const selectedTab = getTabById(tabs, selectedTabId);\n\n  const handleClick = (isTabSelected: boolean, tab: Tab): void => {\n    if (!isTabSelected) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const { id, title } = tab;\n            const isTabSelected = id === selectedTab.id;\n\n            return (\n              <li\n                className={classNames(\n                  {\n                    'is-active': isTabSelected,\n                  },\n                )}\n                data-cy=\"Tab\"\n                key={id}\n              >\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => handleClick(isTabSelected, tab)}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\nimport { getTabById } from './helpers';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const selectedTab = getTabById(tabs, selectedTabId);\n\n  const handleSelectTab = (tab: Tab): void => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is\n        {' '}\n        {selectedTab.title}\n      </h1>\n\n      <div data-cy=\"TabsComponent\">\n        <Tabs\n          tabs={tabs}\n          selectedTabId={selectedTabId}\n          onTabSelected={handleSelectTab}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}